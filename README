Tk/JComboBox version 1.05
=========================

  [Updated Test Code in release - No Changes in JComboBox from 1.04]
  
JComboBox is a ComboBox implementation that combines several features of the various Combo Box implementations available for Perl/Tk and attempts to provide a solution that should cover the majority of your Combo Box needs. The implementation tends to skew somewhat towards the Java and Win32 implementation of a Combo Box more than the Motif one, however it can be configured with little trouble to mimic the Motif implementation if desired.

There have been SEVERAL changes since the 0.02 version of this widget -- hopefully all positive. I've spent the majority of the time writing a fairly robust test suite, though there are still a few gaps which are being worked on. A reasonable amount of effort has gone into verifying that the unit tests will work on multiple platforms, though I suspect that there may yet be a problem or two remaining (mostly regarding event generation which seems to be a bit tempermental). I've also converted my HTML documentation to pod, and updated it to reflect the current state of the widget. 

I expect that this will be the last major release of JComboBox, barring bug fixes. I've been working on migrating the JComboBox codebase to a new distribution that I hope to make available on CPAN. JComboBox will become Tk::CWidget::ComboBox in that distribution - I've become a little uneasy about keeping the name as the Java implementation. Other than that, the widget will be mostly unchanged. Newer features will show up in that version and not this one. Thanks to everyone who contributed suggestions, code, and misc feedback. I hope this widget is useful for others.

  If you use Tk::JComboBox on a Windows machine, use your own 
best judgement before upgrading your module. No new functionality
has been added. Code was added to accommodate test failures
reported in other platforms - failures that did not occur on 
my Windows test machines. The new code still does not trigger
any errors on my windows test machines. 

  Still seeing failures from testers! I expected some errors,
but I expected fewer of them this time around. Well, a few
lessons learned:

  - ALWAYS use PREREQ_PM in Makefile.PL if you have prereqs, 
    I can't believe I'd forgotten to do this!

  - To the greatest extent possible, attempt to make the tests
    bomb-proof. That is, having a HUGE test script is worthless
    if that script bombs out in the first test, and dies, eval
    is your friend!

    The error messages I've gotten in the test report haven't been
    too useful. Hopefully, that will change with this release.

1.05 Updated Test Code - No changes to any of the Modules!
    
   - Failed Test Report:
     http://www.nntp.perl.org/group/perl.cpan.testers/188280
     By cpan@www.interlab.nl
  
     Reported that I'd Forgotten PREREQ_PM - (how embarrassing)
       - Modfied Makefile.PL accordingly.  
     
   - Failed Test Report:
     http://www.nntp.perl.org/group/perl.cpan.testers/188015
     by: saper@cpan.org

     I hope Sébastien doesn't give up on me and stop testing this
     module. I expected it would fail, since I wasn't entirely
     certain what had failed. Unfortunately, this error report
     was tougher to get anything out of than the last one, and the
     fault lies solely with me, since my scripts were apparently 
     so brittle that a few of them died before running even ONE
     test!

     - Modified test scripts making extensive use of eval blocks
     so that problems with one test would kill the entire script.
     Hopefully, the carp calls I've added will give me more helpful
     information on what's going wrong, so that I can fix it. 



INSTALLATION

To install this module type the following:

   perl Makefile.PL
   make
   make test
   make install

DEPENDENCIES

This module requires these other modules and libraries:

  Tk

COPYRIGHT AND LICENCE

Copyright (C) 2005 rcseege

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself. 

